{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","timerId","state","data","syncData","Date","setState","toLocaleTimeString","console","log","this","setInterval","prevProps","name","props","clearInterval","className","React","Component","App","isClockVisible","clockName","showClock","type","onClick","Math","round","random","ReactDOM","render","document","getElementById"],"mappings":"2OAWaA,EAAb,4MACEC,aADF,IAGEC,MAAe,CACbC,KAAM,IAJV,EAwBEC,SAAW,WACT,IAAMD,EAAO,IAAIE,KAEjB,EAAKC,SAAS,CACZH,KAAMA,EAAKI,uBAGbC,QAAQC,IAAI,EAAKP,MAAMC,OA/B3B,uDAOE,WACEO,KAAKT,QAAUU,YAAYD,KAAKN,SAAU,OAR9C,gCAWE,SAAmBQ,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCL,QAAQC,IAAR,qCAA0CG,EAAUC,KAApD,eAA+DH,KAAKI,MAAMD,SAdhF,kCAkBE,WACMH,KAAKT,SACPc,cAAcL,KAAKT,WApBzB,oBAkCE,WACE,OACE,sBAAMe,UAAU,QAAhB,SACGN,KAAKR,MAAMC,WArCpB,GAA2Bc,IAAMC,WCF3BC,G,kNACJjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,kBACV,EAAKhB,SAAS,CACZc,gBAAgB,K,4CAIpB,WAAU,IAAD,OACP,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACA,8CAEG,IACAN,KAAKR,MAAMkB,gBACT,cAAC,EAAD,CAAOP,KAAMH,KAAKR,MAAMmB,eAE7B,wBACEE,KAAK,SACLP,UAAU,aACVQ,QAAS,kBACP,EAAKlB,SAAS,CACZc,gBAAgB,KALtB,wBAWA,wBACEG,KAAK,SACLP,UAAU,aACVQ,QAAS,kBACP,EAAKlB,SAAS,CACZc,gBAAgB,KALtB,wBAWA,wBACEG,KAAK,SACLP,UAAU,aACVQ,QAAS,kBACP,EAAKlB,SAAS,CACZe,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,aALjC,oC,GA5CUV,IAAMC,YA4DTC,IClEfS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f1d60eea.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ninterface State {\n  data: string,\n}\n\ntype Props = {\n  name: number;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  timerId?: NodeJS.Timeout;\n\n  state: State = {\n    data: '',\n  };\n\n  componentDidMount() {\n    this.timerId = setInterval(this.syncData, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  syncData = () => {\n    const data = new Date();\n\n    this.setState({\n      data: data.toLocaleTimeString(),\n    });\n    // eslint-disable-next-line\n    console.log(this.state.data);\n  };\n\n  render() {\n    return (\n      <span className=\"Clock\">\n        {this.state.data}\n      </span>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './components/Clock/Clock';\nimport './App.scss';\n\ninterface State {\n  isClockVisible: boolean;\n  clockName: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isClockVisible: false,\n    clockName: 0,\n  };\n\n  showClock = () => (\n    this.setState({\n      isClockVisible: true,\n    })\n  );\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {this.state.isClockVisible\n          && <Clock name={this.state.clockName} />}\n        </p>\n        <button\n          type=\"button\"\n          className=\"showButton\"\n          onClick={() => (\n            this.setState({\n              isClockVisible: true,\n            })\n          )}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"hideButton\"\n          onClick={() => (\n            this.setState({\n              isClockVisible: false,\n            })\n          )}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"nameButton\"\n          onClick={() => (\n            this.setState({\n              clockName: Math.round(Math.random() * 1000),\n            })\n          )}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}